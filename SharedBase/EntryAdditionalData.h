#pragma once

#include <string>
#include <vector>

// любые данные в любм виде, сохранённые в виде массива байт. Что с этими данными делать будет зависеть от идентификатора и плагина, умеющего этот идентификатор распознать
class EntryAdditionalData
{
public:
	std::string id; // любой текстовый идентификатор, должен быть уникальным, чтобы не было проблем. Можно GUID или большое случайное число - не важно.
	std::vector<unsigned char> data; // любые данные в любов виде. Будут интерпретироваться использующим их плагином так, как ему будет нужно. Лучше не слиьно большой объём, чтобы БД не разрасталась.
};
